import express from "express";
import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { SSEServerTransport } from "@modelcontextprotocol/sdk/server/sse.js";

const app = express();

const server = new McpServer({
  name: "example-server",
  version: "1.0.0"
}, {
  capabilities: {}
});


server.registerTool('component', {
  description: `This tool accepts angular component code generated by the LLM and processes it. Eg. @Component({ ... })
  class ExampleComponent {
    constructor() { }
  }`,
  inputSchema: {
    type: "string",
    description: `Angular component code to be processed.
    Eg. @Component({ ... })
  class ExampleComponent {
    constructor() { }
  }
    `
  }

}, (a, b) => {
  return {
    name: "example-component",
    template: "<p>Example Component</p>",
    styles: ["p { color: red; }"]
  };
})

server.registerTool('service', {
  description: "This tool creates a Angular Service.",
})

server.registerTool('API', {
  description: "This tool creates a Angular API.",
})

server.registerTool('directive', {
  description: "This tool creates a Angular directive.",
})

server.registerTool('pipe', {
  description: "This tool creates a Angular pipe.",
})

server.registerTool('route', {
  description: "This tool creates a Angular route.",
})

let transport = null;

app.get("/sse", (req, res) => {
  transport = new SSEServerTransport("/messages", res);
  server.connect(transport);
});

app.post("/messages", (req, res) => {
  if (transport) {
    transport.handlePostMessage(req, res);
  }
});

app.listen(3000);